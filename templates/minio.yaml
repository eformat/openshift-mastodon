---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: {{ .Release.namespace }}
  name: {{ include "minio.fullname" . }}
spec:
  accessModes:
  - {{ .Values.minio.persistence.accessModes }}
  resources:
    requests:
      storage: {{ .Values.minio.persistence.volumeSize }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Release.namespace }}
  name: {{ include "minio.fullname" . }}
  labels:
    {{- include "minio.labels" . | nindent 4 }}
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
     {{- include "minio.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "minio.labels" . | nindent 8 }}
    spec:
      containers:
      - name: minio
        image: {{ .Values.minio.image }}
        imagePullPolicy: IfNotPresent
        resources: {}
        args:
        - server
        - /storage
        - --config-dir=/config
        env:
        - name: MINIO_ACCESS_KEY
          value: "minio"
        - name: MINIO_SECRET_KEY
          value: "minio123"
        ports:
        - containerPort: 9000
        volumeMounts:
        - name: storage
          mountPath: "/storage"
      volumes:
      - name: storage
        persistentVolumeClaim:
          claimName: {{ include "minio.fullname" . }}
      - name: config
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  namespace: {{ .Release.namespace }}
  name: {{ include "minio.fullname" . }}
  labels:
    {{- include "minio.labels" . | nindent 4 }}
spec:
  ports:
    - port: 9000
      protocol: TCP
  selector:
    {{- include "minio.selectorLabels" . | nindent 6 }}
  type: ClusterIP
  sessionAffinity: None
---
apiVersion: batch/v1
kind: Job
metadata:
  namespace: {{ .Release.namespace }}
  name: {{ include "minio.fullname" . }}
  labels:
    {{- include "minio.labels" . | nindent 4 }}
spec:
  template:
    metadata:
      name: minio-setup
    spec:
      restartPolicy: OnFailure
      volumes:
      - name: config
        emptyDir: {}
      restartPolicy: OnFailure
      containers:
      - name: mc
        image: minio/mc:latest
        imagePullPolicy: IfNotPresent
        command:
        - /bin/sh
        - -c
        - "mc --config-dir=/config config host add local http://{{ include "minio.fullname" . }}:9000 minio minio123 && mc --config-dir=/config mb --ignore-existing local/mastodon && mc --config-dir=/config policy --recursive set download local/mastodon"
        volumeMounts:
        - name: config
          mountPath: "/config"
---
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  namespace: {{ .Release.namespace }}
  name: {{ include "minio.fullname" . }}
  labels:
    {{- include "minio.labels" . | nindent 4 }}
  annotations:
    openshift.io/host.generated: 'true'
spec:
  host: {{ .Values.mastodon.local_domain }}
  path: /mastodon
  to:
    kind: Service
    name: {{ include "minio.fullname" . }}
    weight: 100
  port:
    targetPort: 9000
  tls:
    insecureEdgeTerminationPolicy: Redirect
    termination: edge
  wildcardPolicy: None
